//
//                     ,,               ,,
//   `7MMM.     ,MMF'  db               db
//     MMMb    dPMM
//     M YM   ,M MM  `7MM  `7M'   `MF'`7MM  `7MMpMMMb.  ,pP"Ybd
//     M  Mb  M' MM    MM    `VA ,V'    MM    MM    MM  8I   `"
//     M  YM.P'  MM    MM      XMX      MM    MM    MM  `YMMMa.
//     M  `YM'   MM    MM    ,V' VA.    MM    MM    MM  L.   I8
//   .JML. `'  .JMML..JMML..AM.   .MA..JMML..JMML  JMML.M9mmmP'
//
//

@mixin smooth-scroll {
  -webkit-overflow-scrolling: touch;
}

// Default Animate transition
@mixin default-transition
(
  $property: all, 
  $duration: .5s, 
  $timing-fn: $ease-out, 
  $delay: 0s
) 
{
  transition: $property $duration $timing-fn $delay;
}

// Overlay
@mixin overlay( $bgc: rgba(0,0,0,.3) ) {
  content: "";
  display: block;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background-color: $bgc;
}

// Image Object-fit: cover
@mixin object-fit {
  display: block;
  position: absolute;
  width: 100%;
  height: 100%;
  object-fit: cover;
}

// Multiline Text Ellipsis
@mixin multiline-ellipsis($fz: 16px, $lh: 1.5, $lts: 0, $lines: 2) {
  display: block; /* Fallback for non-webkit */
  display: -webkit-box;
  max-width: 100%;
  max-height: $fz * $lh * $lines; /* Fallback for non-webkit */
  overflow: hidden;
  font-size: $fz;
  line-height: $lh;
  letter-spacing: $lts;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  text-overflow: ellipsis;
}

// Writing-mode Horizontal-tb
@mixin writing-mode-htb {
  writing-mode: horizontal-tb;
  -webkit-writing-mode: horizontal-tb;
  -ms-writing-mode: horizontal-tb;
  -ms-writing-mode: lr-tb;
}

// Writing-mode Vertical-rl
@mixin writing-mode-vrl {
  writing-mode: vertical-rl;
  -webkit-writing-mode: vertical-rl;
  -ms-writing-mode: vertical-rl;
  -ms-writing-mode: tb-rl;
}

// Text Ellipsis
@mixin text-ellipsis {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
  // don’t forget that .block-with-text can’t be an inline element
}

// Vertical Center by CSS3 Transform
@mixin pos-center($pos:both) {
  position: absolute;

  @if ($pos==both) {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  } @else if ($pos==horizontal) {
    left: 50%;
    transform: translateX(-50%);
  } @else if ($pos==vertical) {
    top: 50%;
    transform: translateY(-50%);
  }
}

// Cross Browser ::placeholder Pseudo Element Styling
@mixin placeholder {
  &::-webkit-input-placeholder { /* Chrome/Opera/Safari */
    @content;
  }

  &::-moz-placeholder {  /* Firefox 19+ */
    @content;
  }

  &:-moz-placeholder { /* Firefox 18- */
    @content;
  }

  &:-ms-input-placeholder { /* IE 10+ */
    @content;
  }
}

// Hide text, Screen Reader Text
@mixin hide-text {
  position: absolute;
  width: 1px;
  height: 1px;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
}

// CSS Loading Spinner
@mixin loading-spinner {
  &:before,
  &:after {
    content: "";
    display: block;
    position: absolute;
    z-index: 1;
    opacity: 0;
    pointer-events: none;
    transition: opacity .5s $ease-out;
  }

  // Overlay
  &:before {
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background-color: rgba($dark,.85);
  }

  // Loading Spinner
  &:after {
    top: 50%;
    left: 50%;
    width: 32px;
    height: 32px;
    margin-top: -16px;
    margin-left: -16px;
    border: 3px solid #646464;
    border-radius: 50%;
    border-top-color: #fff;
    animation: spin 1s ease-in-out infinite;
  }

  &.loading {
    &:before,
    &:after {
      opacity: 1;
      pointer-events: auto;
    }
  }
}

// CSS Grid
@mixin display-grid {
  display: -ms-grid;
  display: grid;
}

@mixin display-inline-grid {
  display: -ms-inline-grid;
  display: inline-grid;
}

@mixin grid-template-columns($col) {
  -ms-grid-columns: $col;
  grid-template-columns: $col;
}

@mixin grid-template-rows($row) {
  -ms-grid-rows: $row;
  grid-template-rows: $row;
}

@mixin grid-item($col-start, $col-end, $row-start, $row-end) {
  -ms-grid-column: $col-start;
  -ms-grid-column-span: $col-end - $col-start;
  -ms-grid-row: $row-start;
  -ms-grid-row-span: $row-end - $row-start;
  grid-column: #{$col-start}/#{$col-end};
  grid-row: #{$row-start}/#{$row-end};
}

@mixin align-self($align-self) {
  -ms-grid-column-align: $align-self;
  align-self: $align-self;
}

@mixin justify-self($justify-self) {
  -ms-grid-row-align: $justify-self;
  justify-self: $justify-self;
}

// Media Queries For Hover Devices
@mixin md-hover($active:false) {
  @media (hover: hover) {
    &:hover {
      @content;
    }
  }

  @if $active {
    &.active {
      @content;
    }
  }
}


